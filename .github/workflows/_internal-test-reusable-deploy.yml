name: Test for reusable-deploy
run-name: ${{ github.workflow }} on ${{ github.ref_type }} ${{ github.ref_name }} [${{ github.sha }}]

on:
  workflow_call:
    inputs:
      environment:
        description: |
          Required input to set the environment to deploy.
        required: false
        type: string
        default: "develop"
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: "Choose the environment"
        default: "develop"
        options:
          - develop
          - prod
  pull_request:
    paths:
      - .github/workflows/reusable-deploy.yml
      - .github/workflows/_internal-test-reusable-deploy.yml

concurrency:
  group: test-reusable-deploy-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: test

jobs:
  debug:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        run: |
          set -x
          pwd
          ls -lah

          if [ -f index.js ]; then
            cat index.js
          fi
  exercise:
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      working-directory: test
      environment: ${{ inputs.environment }}
      node-version-file: test/package.json
      build-command: build
      build-environments: '["BLANK=abc space", "TEST_CONFIG=test", "PROD=prod", "BASE_URL=https://example.com", "TEST_VAR=${{ vars.TEST_VAR }}"]'
      s3-sync-command: ./dist s3://example-bucket -dryrun --exclude "*.js"
      enable-aws-deploy: false
    secrets:
      node-auth-token: ${{ secrets.GITHUB_TOKEN }}
      aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
    permissions:
      contents: write
      packages: read
      id-token: write

  verify:
    needs: [exercise]
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    env:
      S3_DEPLOY_COMMAND: ${{ needs.exercise.outputs.s3-deploy-command }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify
        run: |
          set -x
          echo "S3_DEPLOY_COMMAND: $S3_DEPLOY_COMMAND"

          # job自体がfailになり、WFがfail状態になるので、エラー確認jobは実行しない
  # exercise-fail:
  #   uses: ./.github/workflows/reusable-deploy.yml
  #   with:
  #     working-directory: test
  #     environment: ${{ inputs.environment }}
  #     node-version-file: test/package.json
  #     build-command: build
  #     build-environments: '["BLANK=abc space" "TEST_CONFIG=test", "PROD=prod", "BASE_URL=https://example.com", "TEST_VAR=${{ vars.TEST_VAR }}"]'
  #     s3-sync-command: ./dist s3://example-bucket -dryrun --exclude "*.js"
  #     enable-aws-deploy: false
  #   secrets:
  #     node-auth-token: ${{ secrets.GITHUB_TOKEN }}
  #     aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
  #   permissions:
  #     contents: write
  #     packages: read
  #     id-token: write

  # verify-fail:
  #   runs-on: ubuntu-22.04
  #   timeout-minutes: 5
  #   needs: [exercise-fail]
  #   if: ${{ failure() }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Verify or Handle Error
  #       run: |
  #         echo "exercise-fail failed. OK!"

  exercise-matrix:
    permissions:
      contents: write
      packages: read
      id-token: write
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        environment: [develop, prod]
        include:
          - environment: develop
            npm-registry-url: https://npm.pkg.github.com
            npm-scope: "@${{ github.repository_owner }}"
            checkout-ref: ${{ github.head_ref }}
            npm-install-options: "--no-audit --if-presets"
            build-command: build
            build-environments: '["TEST_CONFIG=develop-test", "PROD=false", "BASE_URL=https://example.com", "TEST_VAR=${{ vars.TEST_VAR }}"]'
            s3-sync-command: ./dist s3://example-bucket --delete --dryrun --exclude "*.json"
            enable-aws-deploy: false

          - environment: prod
            build-command: generate
            checkout-ref: ${{ github.ref }}
            build-environments: '["TEST_CONFIG=production-test", "PROD=true", "BASE_URL=https://example.com/prod", "TEST_VAR=${{ vars.TEST_VAR }}"]'
            s3-sync-command: ./outputs/public s3://example-prod-bucket --delete --dryrun --exclude "node_modules/*" --exclude "abc/*" --exclude "def/*"
            enable-aws-deploy: false
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      working-directory: test
      environment: ${{ matrix.environment }}
      node-version-file: test/package.json
      build-command: ${{ matrix.build-command }}
      npm-scope: ${{ matrix.npm-scope }}
      checkout-ref: ${{ matrix.checkout-ref }}
      npm-install-options: ${{ matrix.npm-install-options }}
      build-environments: ${{ matrix.build-environments }}
      s3-sync-command: ${{ matrix.s3-sync-command }}
      enable-aws-deploy: ${{ matrix.enable-aws-deploy }}
    secrets:
      node-auth-token: ${{ secrets.GITHUB_TOKEN }}
      aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}

  exercise-auto-merge:
    permissions:
      contents: write
      packages: read
      id-token: write
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      working-directory: test
      environment: ${{ inputs.environment }}
      node-version-file: test/package.json
      build-command: build
      build-environments: '["BLANK=abc space", "TEST_CONFIG=test", "PROD=prod", "BASE_URL=https://example.com", "TEST_VAR=${{ vars.TEST_VAR }}"]'
      s3-sync-command: ./dist s3://example-bucket -dryrun --exclude "*.js"
      enable-aws-deploy: false
      enable-auto-merge: true
      auto-merge-target-branch: develop
    secrets:
      node-auth-token: ${{ secrets.GITHUB_TOKEN }}
      aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
      github-token: ${{ secrets.GITHUB_TOKEN }}
