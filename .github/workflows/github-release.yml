# @see https://github.com/tmknom/release-workflows/blob/main/.github/workflows/github-releases.yml
name: Release GitHub Releases

on:
  workflow_call:
    inputs:
      level:
        description: |
          Bump up to [patch / minor / major]
        type: string
        required: true

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Input
        run: |
          set -xeu

          if [[ "${{ inputs.level }}" =~ ^(major|minor|patch)$ ]]; then
            echo "BUMP_LEVEL=${{ inputs.level }}" >> "$GITHUB_ENV"
          else
            echo "Error: Invalid input for 'level'. Allowed values are 'major', 'minor', or 'patch'."
            exit 1
          fi

      - name: Configure Git
        uses: gawaooooo-sandbox/learn-github-actions-custom/composite/git-config@v3

      - name: Bump Version
        run: |
          set -xeu

          git fetch --tag
          current="$(git tag --sort=-v:refname | head -1)"
          current="${current:-v0.0.0}"

          IFS='.' read -ra versions <<<"${current#v}"
          major="${versions[0]}"
          minor="${versions[1]}"
          patch="${versions[2]}"

          case "${BUMP_LEVEL}" in
            major)
              major="$((major + 1))"
              minor=0
              patch=0
              ;;
            minor)
              minor="$((minor + 1))"
              patch=0
              ;;
            patch)
              patch="$((patch + 1))"
              ;;
          esac

          echo "VERSION=v${major}.${minor}.${patch}" >> "$GITHUB_ENV"

      - name: Push version tag
        run: |
          set -xeu

          major="${VERSION%%.*}"
          git tag --force --message "${VERSION}" "${VERSION}"
          git tag --force --message "${VERSION}" "${major}"
          git push --force origin "${VERSION}"
          git push --force origin "${major}"

      - name: Release
        run: |
          set -xeu

          gh release create "${VERSION}" --title "${VERSION}" --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
