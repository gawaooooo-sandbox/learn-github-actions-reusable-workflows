name: Generate Documentation

on:
  workflow_call:
    inputs:
      doc-type:
        description: |
          Type of documentation to generate: workflow or composite.
        type: string
        required: false
        default: "workflow"

      commit-message:
        description: |
          Provide a commit message that describes the documentation updates.
        type: string
        required: true

      ref:
        description: |
          The git ref to check out for documentation generation.
        type: string
        required: false

      convert-pre-to-code:
        description: |
          Convert <pre> tags to <code> tags in generated Markdown files.
        type: boolean
        required: false
        default: true

    outputs:
      branch:
        value: ${{ jobs.prepare-and-generate.outputs.branch }}
        description: Name of the pushed branch.

defaults:
  run:
    shell: bash

jobs:
  prepare-and-generate:
    name: Generate ${{ inputs.doc-type }} documentation
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: write
      pull-requests: write
    env:
      BASE_BRANCH: ${{ github.event.repository.default_branch }}
    outputs:
      branch: ${{ steps.git-push.outputs.branch }}

    steps:
      - name: Create inputs summary
        uses: gawaooooo-sandbox/learn-github-actions-custom/composite/inputs-summary@v3
        with:
          workflow-inputs: ${{ toJSON(inputs) }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || env.BASE_BRANCH }}

      - name: Set execute permissions on scripts
        run: |
          chmod +x .github/scripts/collect_files.sh
          chmod +x .github/scripts/generate_docs.sh
          chmod +x .github/scripts/convert_pre_to_code.sh

      - name: Collect YAML ans Markdown files
        id: collect
        run: .github/scripts/collect_files.sh ${{ inputs.doc-type }}

      - name: Generate Documentation for Multiple Files
        run: .github/scripts/generate_docs.sh "${{ steps.collect.outputs.yaml-files }}" "${{ steps.collect.outputs.markdown-files }}"

      - name: Convert <pre> to <code> in Markdown files
        if: ${{ inputs.convert-pre-to-code }}
        run: .github/scripts/convert_pre_to_code.sh "${{ steps.collect.outputs.markdown-files }}"

      - name: Configure Git
        uses: gawaooooo-sandbox/learn-github-actions-custom/composite/git-config@v3

      - name: Git diff status
        id: git-diff-status
        run: |
          echo "::group::Git diff status"
          set -xeu

          if [[ -z $(git diff --name-only -- 'docs/*.md') ]]; then
            echo "No changes to commit."
            echo "diff=false" >> "$GITHUB_OUTPUT"
          else
            echo "Changes detected."
            echo "diff=true" >> "$GITHUB_OUTPUT"
          fi
          echo "::endgroup::"

      - name: Git push
        id: git-push
        if: ${{steps.git-diff-status.outputs.diff == 'true'}}
        env:
          MESSAGE: ${{ inputs.commit-message }}
          TZ: Asia/Tokyo
        run: |
          echo "::group::Git push"
          set -xeu

          branch="docs/$(date +%Y%m%d-%H%M%S)-${GITHUB_RUN_ID}"
          log="Generated by ${GITHUB_WORKFLOW} workflow."
          url="- ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

          git switch -c "${branch}"
          git add docs/*.md
          git commit -m "${MESSAGE}" -m "${log}" -m "${url}"
          git push origin "${branch}"
          echo "branch=${branch}" >> "$GITHUB_OUTPUT"
          echo "::endgroup::"

      - name: Fetch to update remote branches
        if: ${{ steps.git-push.outcome == 'success'}}
        run: git fetch

      - name: Create PR
        if: ${{ steps.git-push.outcome == 'success'}}
        env:
          BRANCH: ${{ steps.git-push.outputs.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -xeu
          gh pr create --base "${BASE_BRANCH}" --head "${BRANCH}" --fill-first
