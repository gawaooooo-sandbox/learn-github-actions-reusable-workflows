name: Lint code

on:
  workflow_call:
    inputs:
      node-version:
        description: |
          Optional input to set the version of Node.js used to build the project.
          The input syntax corresponds to the setup-node's one.
        required: false
        type: string

      node-version-file:
        description: |
          Optional input to set the file that contains the version of Node.js used to build the project.
          The input syntax corresponds to the setup-node's one.
        required: false
        type: string
        default: ".nvmrc"

      node-caching:
        description: |
          Optional input to set up caching for the setup-node action.
          The input syntax corresponds to the setup-node's one.
          Set to an empty string if caching isn't needed.
        required: false
        type: string
        default: "npm"

      checkout-ref:
        description: |
          Optional input to set the ref to checkout.
          The input syntax corresponds to the actions/checkout's one.
        required: false
        type: string
        # TODO: github.ref?
        default: ${{ github.head_ref }}

      install-options:
        description: |
          Optional input to set the options to pass to the `npm ci` command.
        required: false
        type: string

      enable-format-check:
        description: |
          Optional input to enable the format check.
        required: false
        type: boolean
        default: false

      format-check-script:
        description: |
          Optional input to set the script to run the format check.
        required: false
        type: string
        default: "npm run format:check"

      enable-lint:
        description: |
          Optional input to enable the lint.
        required: false
        type: boolean
        default: true

      lint-script:
        description: |
          Optional input to set the script to run the lint.
        required: false
        type: string
        default: "npm run lint"

      enable-type-check:
        description: |
          Optional input to enable the type check.
        required: false
        type: boolean
        default: false

      typecheck-script:
        description: |
          Optional input to set the script to run the type check.
        required: false
        type: string
        default: "npm run type-check"

jobs:
  pre-proceccins:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: test summury
        uses: gawaooooo-sandbox/learn-github-actions-reusable-workflows/.github/actions/create-inputs-summary@feature/test-lint
        with:
          inputs: inputs

  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    permissions:
      contents: read

    steps:
      # #  test job summary
      # - name: post test summary
      #   uses: actions/github-script@v7
      #   env:
      #     NODE_VERSION: ${{ inputs.node-version }}
      #     NODE_VERSION_FILE: ${{ inputs.node-version-file }}
      #     NODE_CACHING: ${{ inputs.node-caching }}
      #     CHECKOUT_REF: ${{ inputs.checkout-ref }}
      #     INSTALL_OPTIONS: ${{ inputs.install-options }}
      #     ENABLE_FORMAT_CHECK: ${{ inputs.enable-format-check }}
      #     FORMAT_CHECK_SCRIPT: ${{ inputs.format-check-script }}
      #     ENABLE_LINT: ${{ inputs.enable-lint }}
      #     LINT_SCRIPT: ${{ inputs.lint-script }}
      #     ENABLE_TYPE_CHECK: ${{ inputs.enable-type-check }}
      #     TYPECHECK_SCRIPT: ${{ inputs.typecheck-script }}

      #   with:
      #     script: |
      #       console.log(context);
      #       console.log(process.env);
      #       const inputs = {
      #         'node-version': process.env.NODE_VERSION,
      #         'node-version-file': process.env.NODE_VERSION_FILE,
      #         'node-caching': process.env.NODE_CACHING,
      #         'checkout-ref': process.env.CHECKOUT_REF,
      #         'install-options': process.env.INSTALL_OPTIONS,
      #         'enable-format-check': process.env.ENABLE_FORMAT_CHECK,
      #         'format-check-script': process.env.FORMAT_CHECK_SCRIPT,
      #         'enable-lint': process.env.ENABLE_LINT,
      #         'lint-script': process.env.LINT_SCRIPT,
      #         'enable-type-check': process.env.ENABLE_TYPE_CHECK,
      #         'typecheck-script': process.env.TYPECHECK_SCRIPT
      #       };
      #       console.log(inputs);

      #       const parametersTable = [
      #         [{ data: 'key', header: true}, { data: 'value', header: true }],
      #         ['branch', '${{ github.ref_name }}']
      #       ];
      #       console.log(parametersTable)

      #       // console.log(context.payload.inputs)

      #       for ([key, value] of Object.entries(inputs)) {
      #         parametersTable.push([key, value])
      #         // retryCommand += ` -f ${key}='${value}'`
      #       }

      #       await core.summary
      #         .addRaw("### üìùInput Parameters\n")
      #         .addTable(parametersTable)
      #         .write()

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout-ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          node-version-file: ${{ inputs.node-version-file }}
          cache: ${{ inputs.node-caching }}

      - name: Install dependencies
        run: npm ci "${INSTALL_OPTIONS}"
        env:
          # CI‰∏ä„Åß„ÅØ Husky „Çí install „Åó„Å™„ÅÑ
          # https://typicode.github.io/husky/how-to.html#ci-server-and-docker
          HUSKY: 0
          INSTALL_OPTIONS: ${{ inputs.install-options }}

      - name: Run format check
        if: ${{ inputs.enable-format-check }}
        run: "${FORMAT_CHECK_SCRIPT}"
        env:
          FORMAT_CHECK_SCRIPT: ${{ inputs.format-check-script }}

      - name: Run linter
        if: ${{ inputs.enable-lint }}
        run: "${LINT_SCRIPT}"
        env:
          LINT_SCRIPT: ${{ inputs.lint-script }}

      - name: Run type check
        if: ${{ inputs.enable-type-check }}
        run: "${TYPECHECK_SCRIPT}"
        env:
          TYPECHECK_SCRIPT: ${{ inputs.typecheck-script }}
