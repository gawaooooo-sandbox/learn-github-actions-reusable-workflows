# deploy flow
# checkout code
# setup node.js
# install dependencies
# build
# deploy

name: Deploy

on:
  workflow_call:
    inputs:
      working-directory:
        description: |
          Optional input to set the working directory.
        required: false
        type: string
        default: "."

      environment:
        description: |
          Required input to set the environment to deploy.
        required: true
        type: string

      # Set up Node.js  & install dependencies inputs
      node-version:
        description: |
          Optional input to set the version of Node.js used to build the project.
          The input syntax corresponds to the setup-node's one.
        required: false
        type: string

      node-version-file:
        description: |
          Optional input to set the file that contains the version of Node.js used to build the project.
          The input syntax corresponds to the setup-node's one.
        required: false
        type: string
        default: ".nvmrc"

      node-caching:
        description: |
          Optional input to set up caching for the setup-node action.
          The input syntax corresponds to the setup-node's one.
          Set to an empty string if caching isn't needed.
        required: false
        type: string
        default: "npm"

      npm-registry-url:
        description: |
          Optional input to set the registry URL to use for the npm commands.
          The input syntax corresponds to the setup-node's one.
          When using GitHub Packages, specify `https://npm.pkg.github.com`
        required: false
        type: string

      npm-scope:
        description: |
          Optional input to set the scope to use for the npm commands.
          The input syntax corresponds to the setup-node's one.
          `hoge package` -> `@hoge`
          GitHub Packages -> `@owner` (use `github.repository_owner`)
        required: false
        type: string

      checkout-ref:
        description: |
          Optional input to set the ref to checkout.
          The input syntax corresponds to the actions/checkout's one.
        required: false
        type: string
        # TODO: github.ref?
        default: ${{ github.head_ref }}

      npm-install-options:
        description: |
          Optional input to set the options to pass to the `npm ci` command.
        required: false
        type: string

      # Build inputs
      build-command:
        description: |
          Optional input to set the build command to run.
          `npm run build` -> `build`
          `npm run generate` -> `generate` (default)
        required: false
        type: string
        default: "generate"
      build-environments:
        description: |
          Optional input to set the environment variables to set for the build command.
          This needs to be specified in JSON string format.
          Passing the inputs context wrapped in a `toJSON` expression.
        required: false
        type: string

      # Deploy inputs
      s3-uri:
        description: |
          Required input to set the S3 URI to deploy the build artifacts.
        required: true
        type: string
      dist-dir:
        description: |
          Optional input to set the directory to deploy.
        required: false
        type: string
        default: "./dist"
      s3-sync-options:
        description: |
          Optional input to set the options to pass to the `aws s3 sync` command.
          e.g. `-delete --exclude "hoge/*"`
        required: false
        type: string

    secrets:
      node-auth-token:
        description: |
          Optional secret to set the authentication token to use for the npm commands.
          The input syntax corresponds to the setup-node's one.
          When using GitHub Packages, specify `secrets.GITHUB_TOKEN`
          When using npm, specify `secrets.NPM_AUTH_TOKEN`
        required: false
      aws-role-arn:
        description: |
          Required secret to set the AWS IAM Role ARN to assume for the deployment.
        required: true

concurrency:
  group: reusable-deploy-${{ github.workflow }}-${{ github.ref }}-${{ inputs.checkout-ref}}-${{ inputs.environment}}
  cancel-in-progress: true

jobs:
  pre-processing:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: create inputs summary
        uses: gawaooooo-sandbox/learn-github-actions-custom/composite/inputs-summary@main
        with:
          workflow-inputs: ${{ toJSON(inputs) }}

  deploy:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    permissions:
      contents: read
      packages: read
      id-token: write
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: Setup Node.js and Install dependencies
        uses: gawaooooo-sandbox/learn-github-actions-custom/composite/node-npm-setup@main
        with:
          node-version: ${{ inputs.node-version }}
          node-version-file: ${{ inputs.node-version-file }}
          node-caching: ${{ inputs.node-caching }}
          npm-registry-url: ${{ inputs.npm-registry-url }}
          npm-scope: ${{ inputs.npm-scope }}
          node-auth-token: ${{ secrets.node-auth-token }}
          checkout-ref: ${{ inputs.checkout-ref }}
          npm-install-options: ${{ inputs.npm-install-options }}
          create-inputs-summary: "true"

      - name: Set Environments to GITHUB_ENV
        run: |
          set -x
          echo "Inputs Build environments: ${{ inputs.build-environments }}"
          echo "env BUILD_ENVIRONMENTS: ${{ env.BUILD_ENVIRONMENTS}}"
          echo "env BUILD_ENVIRONMENTS: fromJSON: ${{ fromJSON(env.BUILD_ENVIRONMENTS) }}"

          buildEnvironments=$(echo ${{ fromJSON(env.BUILD_ENVIRONMENTS) }})
          for key in $(echo "$buildEnvironments" | jq -r 'keys[]'); do
            value=$(echo "$buildEnvironments" | jq -r ".$key")
            echo "export $key=$value" >> "$GITHUB_ENV"
          done

        env:
          BUILD_ENVIRONMENTS: ${{ inputs.build-environments }}

      - name: Build ${{ inputs.environment }}
        run: |
          set -x
          echo "Build command: ${{ inputs.build-command }}"
          echo "Build environments: ${{ inputs.build-environments }}"
          npm run ${{ inputs.build-command }}

      # - name: deploy
      #   run: aws s3 sync ${{ inputs.dist-dir }} ${{ inputs.s3-uri }} ${{ inputs.s3-sync-options }}
      #   env:
      #     AWS_S3_DEPLOY_ROLE_ARN: ${{ secrets.AWS_S3_DEPLOY_ROLE_ARN }}
